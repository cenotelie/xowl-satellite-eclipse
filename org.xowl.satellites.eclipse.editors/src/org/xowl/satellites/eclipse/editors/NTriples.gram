/*******************************************************************************
 * Copyright (c) 2017 Association Cénotélie (cenotelie.fr)
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General
 * Public License along with this program.
 * If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/

 grammar NTriples
{
	options
	{
		Axiom = "ntriplesDoc";
		Separator = "BLANK";
	}
	terminals
	{
		NEW_LINE		-> U+000D /* CR */
						|  U+000A /* LF */
						|  U+000D U+000A /* CR LF */
						|  U+2028 /* LS */
						|  U+2029 /* PS */ ;
		WHITE_SPACE		-> U+0020 | U+0009 | U+000B | U+000C ;
		COMMENT			-> '#' (.* - (.* NEW_LINE .*)) NEW_LINE ;
		BLANK			-> NEW_LINE | WHITE_SPACE ;
		
		LANGTAG					-> '@' [a-zA-Z]+ ('-' [a-zA-Z0-9]+)* ;
		
		IRIREF					-> '<' (
									. - (U+0000 .. U+0020 | [<>"{}|^`\\])
									| '\\u' [a-fA-F0-9]{4}
									| '\\U' [a-fA-F0-9]{8}
								)* '>' ;
		
		STRING_LITERAL_QUOTE	-> '"' (
									. - (U+0022 | U+005C | U+000A | U+000D)
									| '\\' ([tbnrf"'] | '\\')
									| '\\u' [a-fA-F0-9]{4}
									| '\\U' [a-fA-F0-9]{8}
								)* '"' ;
		
		fragment PN_CHARS_BASE	-> [A-Za-z] | U+00C0 .. U+00D6 | U+00D8 .. U+00F6 | U+00F8 .. U+02FF | U+0370 .. U+037D
        											| U+037F .. U+1FFF | U+200C .. U+200D | U+2070 .. U+218F | U+2C00 .. U+2FEF
        											| U+3001 .. U+D7FF | U+F900 .. U+FDCF | U+FDF0 .. U+FFFD
        											| U+10000 .. U+EFFFF ;
		fragment PN_CHARS_U		-> PN_CHARS_BASE | '_' ;
		fragment PN_CHARS		-> PN_CHARS_U | '-' | [0-9] | U+00B7 | U+0300 .. U+036F | U+203F .. U+2040;
		BLANK_NODE_LABEL		-> '_:' (PN_CHARS_U | [0-9]) ((PN_CHARS | '.')* PN_CHARS)? ;
	}
	rules
	{
		ntriplesDoc		-> triple* ;
		triple			-> subject predicate object '.'! ;
		subject			-> IRIREF^ | BLANK_NODE_LABEL^ ;
		predicate		-> IRIREF^ ;
		object			-> IRIREF^ | BLANK_NODE_LABEL^ | literal^ ;
		literal			-> STRING_LITERAL_QUOTE^ ('^^'! IRIREF | LANGTAG)? ;
	}
}
